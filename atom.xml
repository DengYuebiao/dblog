<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DKD&#39;s Blog</title>
  <subtitle>看十篇不如记一篇，记十篇不如做一遍</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.dickdum.com/"/>
  <updated>2016-11-23T07:06:01.717Z</updated>
  <id>http://blog.dickdum.com/</id>
  
  <author>
    <name>DKD</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>apache通过配置httpd.conf绑定多个域名及二级域名</title>
    <link href="http://blog.dickdum.com/2016/11/23/apache%E9%80%9A%E8%BF%87%E9%85%8D%E7%BD%AEhttpd.conf%E7%BB%91%E5%AE%9A%E5%A4%9A%E4%B8%AA%E5%9F%9F%E5%90%8D%E5%8F%8A%E4%BA%8C%E7%BA%A7%E5%9F%9F%E5%90%8D/"/>
    <id>http://blog.dickdum.com/2016/11/23/apache通过配置httpd.conf绑定多个域名及二级域名/</id>
    <published>2016-11-22T16:00:00.000Z</published>
    <updated>2016-11-23T07:06:01.717Z</updated>
    
    <content type="html"><![CDATA[<p>  今天小D我有一个这样的功能需求：配置不同的子域名来指向同一服务器的不同目录。于是我在网上搜到以下方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">方法一：</div><div class="line">  打开http.conf </div><div class="line">  1，#ServerName 127.0.0.1 修改成 ServerName *:80 （注意前面的#号要去掉，下同）</div><div class="line">  2，#NameVirtualHost * 修改成 NameVirtualHost *:80 </div><div class="line">  3，在文件最后面有虚拟主机格式， </div><div class="line">    #&lt;VirtualHost *&gt; </div><div class="line">    #   ServerAdmin [email]admin@minidx.com[/email] </div><div class="line">    #   DocumentRoot /www/httpd/html/minidx.com </div><div class="line">    #   ServerName minidx.com </div><div class="line">    #   ErrorLog logs/minidx.com-error_log </div><div class="line">    #   CustomLog logs/minidx.com-access_log common </div><div class="line">    #&lt;/VirtualHost&gt; </div><div class="line">    简单的添加： </div><div class="line">    &lt;VirtualHost *:80&gt; </div><div class="line">      DocumentRoot usr/local/www/ </div><div class="line">      ServerName   dickdum.com </div><div class="line">    &lt;/VirtualHost&gt; </div><div class="line">    &lt;VirtualHost *:80&gt; </div><div class="line">      DocumentRoot usr/local/www/minidx.com/ </div><div class="line">      ServerName   minidx.com </div><div class="line">    &lt;/VirtualHost&gt; </div><div class="line">    &lt;VirtualHost *:80&gt; </div><div class="line">      DocumentRoot   usr/local/www/ntt.cc/ </div><div class="line">      ServerName   ntt.cc </div><div class="line">    &lt;/VirtualHost&gt;</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">方法二：</div><div class="line">    1、httpd.conf 中需要打开mod_rewrite功能。具体操作就是: </div><div class="line">        在apache的 httpd.conf中 去掉LoadModule rewrite_module modules/mod_rewrite.so前面的#，</div><div class="line">       重启apache生效。</div><div class="line">    2、目录权限设置：</div><div class="line">        Apache的httpd.conf中找到网站目录对应的 Directory 配置</div><div class="line">       将 &quot;AllowOverride None&quot; 改为 &quot;AllowOverride All&quot;</div><div class="line">       因为如果设置为&quot;AllowOverride None&quot;.htaccess中的rewrite指令对该文件夹就无效了。</div><div class="line">    3、在httpd.conf 的最后，添加以下内容：</div><div class="line">        RewriteEngine on </div><div class="line">        RewriteMap lowercase int:tolower </div><div class="line">        RewriteMap vhost txt:/usr/local/etc/apache/vhost.map </div><div class="line">        RewriteCond $&#123;lowercase:%&#123;SERVER_NAME&#125;&#125; ^(.+)$ </div><div class="line">        RewriteCond $&#123;vhost:%1&#125; ^(/.*)$ </div><div class="line">        RewriteRule ^/(.*)$ %1/$1</div><div class="line">       其中的 /usr/local/etc/apache 是你的 apache 服务器配置文件所在路径，根据实际情况更改（例如在/etc/httpd/下面）。</div><div class="line">       然后，在这个所在路径的目录下创建一个文件： vhost.map，内容为：</div><div class="line">        www.minidx.com /usr/local/www/minidx.com </div><div class="line">        www.ntt.cc /usr/local/www/ntt.cc </div><div class="line">        blog.minidx.com /usr/local/www/minidx.com/blog</div><div class="line">        以上部分都是：&quot; 域名+空格+绝对路径&quot; 的形式。</div><div class="line">       最后，在网站根目录 /usr/local/www/下，创建对应目录就可以了。</div><div class="line">       如果需要增加，修改或者删除域名，子域名，仅仅需要更改vhost.map文件，而不用重启apache进程。</div></pre></td></tr></table></figure>
<p>注意：使用方法二的话要把方法一里设置的全部注掉，不然是不成功的，小D在测试两种方法的时候因为先测试了方法一，在测试方法二的时候怎么弄都没成功，后来经大神指点了之后才发现原来是方法一里的配置影响了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  今天小D我有一个这样的功能需求：配置不同的子域名来指向同一服务器的不同目录。于是我在网上搜到以下方法：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;l
    
    </summary>
    
      <category term="apache" scheme="http://blog.dickdum.com/categories/apache/"/>
    
    
      <category term="apache" scheme="http://blog.dickdum.com/tags/apache/"/>
    
  </entry>
  
  <entry>
    <title>一些简单的Markdown语法</title>
    <link href="http://blog.dickdum.com/2016/11/23/%E4%B8%80%E4%BA%9B%E7%AE%80%E5%8D%95%E7%9A%84Markdown%E8%AF%AD%E6%B3%95/"/>
    <id>http://blog.dickdum.com/2016/11/23/一些简单的Markdown语法/</id>
    <published>2016-11-22T16:00:00.000Z</published>
    <updated>2016-11-25T07:01:33.892Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a><font color="2e8857">二级标题</font></h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a><font color="red">四级标题</font></h4><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><p><em>斜体</em><br><strong>粗体</strong><br><strong><em>粗斜体</em></strong><br>普通字体</p>
<font color="blue">带颜色的字体</font>

<blockquote>
<p>这里是引用<br>这里是引用</p>
<p>这里是引用</p>
<blockquote>
<p>这里是引用</p>
<blockquote>
<p>这里是引用</p>
<p>这里是引用</p>
</blockquote>
<p>这里是引用</p>
</blockquote>
</blockquote>
<p><code>这里是代码句</code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">    这里是代码段</div><div class="line">  这里是代码段</div><div class="line">这里是代码段</div></pre></td></tr></table></figure>
<p>原来在末尾加两个空格再回车<br>才可以换行了</p>
<hr>
<p>这两条都是分割线</p>
<hr>
<p><del>这是删除线</del></p>
<p><a href="https://www.baidu.com/" target="_blank" rel="external">这是百度的链接地址</a></p>
<p><a href="mailto:dickdum@163.com" target="_blank" rel="external">这是我的邮箱</a></p>
<p><a href="https://www.baidu.com" target="_blank" rel="external">https://www.baidu.com</a>  </p>
<p><a href="&#109;&#97;&#x69;&#x6c;&#116;&#111;&#58;&#x64;&#105;&#x63;&#x6b;&#x64;&#117;&#109;&#x40;&#x31;&#54;&#51;&#x2e;&#x63;&#111;&#109;">&#x64;&#105;&#x63;&#x6b;&#x64;&#117;&#109;&#x40;&#x31;&#54;&#51;&#x2e;&#x63;&#111;&#109;</a></p>
<p><img src="https://ss0.bdstatic.com/5aV1bjqh_Q23odCf/static/superman/img/logo/bd_logo1_31bdc765.png" alt="这是一张图片链接"></p>
<ul>
<li>无序列表<ul>
<li>无序列表<ul>
<li>无序列表</li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
<li>无序列表<ul>
<li>无序列表<ul>
<li>无序列表</li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
<li>无序列表<ul>
<li>无序列表<ul>
<li>无序列表</li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
<li>无序列表<ul>
<li>无序列表<ul>
<li>无序列表</li>
</ul>
</li>
</ul>
</li>
</ul>
<ol>
<li>有序列表一</li>
<li>有序列表二</li>
<li>有序列表三</li>
</ol>
<p># 这是经过转义的字符，不再是一级标题了</p>
<hr>
<hr>
<h3 id="下面是高级玩法（不保证生效）："><a href="#下面是高级玩法（不保证生效）：" class="headerlink" title="下面是高级玩法（不保证生效）："></a><font color="blue">下面是高级玩法（不保证生效）：</font></h3><p><font color="green">表格</font><br>some|header|labels<br>:—|:–:|—:<br>Left-justified|center-justified|right-justified<br>a|b|c<br>d|e|f<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">每一行用| 分隔成一个个cell</div><div class="line">第一行是表头</div><div class="line">第二行是整个表格magic的关键，规定每一列的对齐方式</div><div class="line">:---左对齐 :--:居中---:右对齐</div><div class="line">不用全部规定对齐方式，默认左对齐</div><div class="line">最简单的第二行写法  -|</div><div class="line">以下每一行是表格数据，| 不用对齐，只要每行| 数相同即可</div></pre></td></tr></table></figure></p>
<p><font color="green">有序列表嵌套无序列表</font>  </p>
<ol>
<li><p>Lists in a list item:  </p>
<ul>
<li>Indented four spaces.  <ul>
<li>indented eight spaces.  </li>
</ul>
</li>
<li>Four spaces again.  </li>
</ul>
</li>
<li><p>Blockquotes in a list item:  </p>
<blockquote>
<p>Skip a line and<br>indent the &gt;’s four spaces.  </p>
</blockquote>
</li>
<li><p>Preformatted text in a list item:  </p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Skip a line and indent ***eight*** spaces.  </div><div class="line">That&apos;s four spaces for the list  </div><div class="line">and four to trigger the code block.</div></pre></td></tr></table></figure>
</li>
</ol>
<p><font color="green">块引用里面嵌套</font></p>
<blockquote>
<ul>
<li>A list in a blockquote  </li>
<li>With a &gt; and space in front of it  <ul>
<li>A sublist  </li>
</ul>
</li>
</ul>
<hr>
<pre><code>Indent ***five*** spaces total. The first  
one is part of the blockquote designator.  
</code></pre></blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一级标题&quot;&gt;&lt;a href=&quot;#一级标题&quot; class=&quot;headerlink&quot; title=&quot;一级标题&quot;&gt;&lt;/a&gt;一级标题&lt;/h1&gt;&lt;h2 id=&quot;二级标题&quot;&gt;&lt;a href=&quot;#二级标题&quot; class=&quot;headerlink&quot; title=&quot;二级标题&quot;&gt;&lt;/a
    
    </summary>
    
      <category term="Markdown" scheme="http://blog.dickdum.com/categories/Markdown/"/>
    
    
      <category term="Markdown" scheme="http://blog.dickdum.com/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Let&#39;s Encrypt，免费好用的 HTTPS 证书</title>
    <link href="http://blog.dickdum.com/2016/11/22/Let&#39;s%20Encrypt%EF%BC%8C%E5%85%8D%E8%B4%B9%E5%A5%BD%E7%94%A8%E7%9A%84%20HTTPS%20%E8%AF%81%E4%B9%A6/"/>
    <id>http://blog.dickdum.com/2016/11/22/Let&#39;s Encrypt，免费好用的 HTTPS 证书/</id>
    <published>2016-11-21T16:00:00.000Z</published>
    <updated>2016-11-22T02:37:20.300Z</updated>
    
    <content type="html"><![CDATA[<p> Let’s Encrypt 是个免费、自动化、开放的证书签发服务。它由 ISRG（Internet Security Research Group，互联网安全研究小组）提供服务，而 ISRG 是来自于美国加利福尼亚州的一个公益组织。Let’s Encrypt 得到了 Mozilla、Cisco、Akamai、Electronic Frontier Foundation 和 Chrome 等众多公司和机构的支持，发展十分迅猛。<br>申请 Let’s Encrypt 证书不但免费，还非常简单，虽然每次只有 90 天的有效期，但可以通过脚本定期更新，配好之后一劳永逸。本文记录本站申请过程和遇到的问题。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt; Let’s Encrypt 是个免费、自动化、开放的证书签发服务。它由 ISRG（Internet Security Research Group，互联网安全研究小组）提供服务，而 ISRG 是来自于美国加利福尼亚州的一个公益组织。Let’s Encrypt 得到了 Mo
    
    </summary>
    
      <category term="SSL" scheme="http://blog.dickdum.com/categories/SSL/"/>
    
    
      <category term="Https" scheme="http://blog.dickdum.com/tags/Https/"/>
    
      <category term="SSL" scheme="http://blog.dickdum.com/tags/SSL/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://blog.dickdum.com/2016/11/16/hello-world/"/>
    <id>http://blog.dickdum.com/2016/11/16/hello-world/</id>
    <published>2016-11-16T07:12:33.804Z</published>
    <updated>2016-11-07T07:14:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>使用Hexo搭建个人博客</title>
    <link href="http://blog.dickdum.com/2016/11/15/%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://blog.dickdum.com/2016/11/15/使用Hexo搭建个人博客/</id>
    <published>2016-11-15T02:34:23.000Z</published>
    <updated>2016-11-18T07:09:23.133Z</updated>
    
    <content type="html"><![CDATA[<p>今天无意中看到了Hexo这个基于Node.js博客框架，自称轻巧快速，于是动起了折腾的想法。尝试后感觉Hexo确实很不错，生成静态页面的速度快，而且搭建环境也容易,很赞。这里简单介绍一下Hexo的安装和使用方法，详细的文档包括API都可以在网上找到，有需要的可以自行百度。</p>
<h2 id="快速体验Hexo"><a href="#快速体验Hexo" class="headerlink" title="快速体验Hexo"></a>快速体验Hexo</h2><p><code>Hexo</code>的安装十分便捷，我们先尝试快速的使用<code>Hexo</code>搭建一个站点。<br>首先安装<code>Node.js</code>，这里使用<code>nvm</code>作为<code>node</code>版本控制的文件。最好不要直接<code>apt-get</code>，版本不对可能会有问题。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</div><div class="line">$ nvm install 0.10</div></pre></td></tr></table></figure>
<p>接下来使用<code>npm</code>工具安装<code>hexo</code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo</div></pre></td></tr></table></figure>
<p>初始化<code>hexo</code>文件夹</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo init &lt;folder&gt; &amp;&amp; <span class="built_in">cd</span> &lt;folder&gt;</div></pre></td></tr></table></figure>
<p>生成静态页面并预览</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo g &amp;&amp; hexo s</div></pre></td></tr></table></figure>
<p>OK，在浏览器中输入<code>localhost:4000</code>，一个<code>Hexo</code>站点就已经展示在你面前了！</p>
<h2 id="了解Hexo"><a href="#了解Hexo" class="headerlink" title="了解Hexo"></a>了解Hexo</h2><p>当然，以上只是使用<code>Hexo</code>搭建了一个站点，要想使用它，还需要多了解一些东西。</p>
<h3 id="1-目录结构"><a href="#1-目录结构" class="headerlink" title="1. 目录结构"></a>1. 目录结构</h3><p><code>Hexo</code>的目录结构如下，其中<code>_config.yml</code>是整个站点的配置文件，<code>source/_drafts</code>是草稿文件目录，<code>source/_posts</code>是发表的博文目录，<code>themes</code>是下载的主题目录，其它的目录暂时不用管。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">├── _config.yml</div><div class="line">├── package.json</div><div class="line">├── scaffolds</div><div class="line">├── scripts</div><div class="line">├── <span class="built_in">source</span></div><div class="line">|   ├── _drafts</div><div class="line">|   └── _posts</div><div class="line">└── themes</div></pre></td></tr></table></figure>
<p>首先是修改配置文件，主要就是配置一下自己的站点信息，配置文件中的注释比较详细，在预览状态下改的话网页上能即时看到效果。<br>默认的主题生成分类好像有点问题（至少我这里有），更多的主题可以上网下载，基本就是<code>git clone</code>到<code>themes</code>目录下然后修改<code>_config.yml</code>中的<code>theme</code>字段就可以了，十分方便。</p>
<h3 id="2-常用指令"><a href="#2-常用指令" class="headerlink" title="2. 常用指令"></a>2. 常用指令</h3><p>Hexo的常用命令有以下几个</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ hexo new [layout] &lt;title&gt; <span class="comment">#建立新文章，默认在_posts下，layout="draft"时发布的是草稿</span></div><div class="line">$ hexo publish &lt;filename&gt;   <span class="comment">#将_drafts下的文件放到_posts下，也就是发布草稿</span></div><div class="line">$ hexo generate <span class="comment">#生成静态网页</span></div><div class="line">$ hexo server   <span class="comment">#启动预览服务器，开启-d选项时可以预览草稿</span></div><div class="line">$ hexo deploy   <span class="comment">#发布到远程服务器，开启--generate选项可以在deploy前自动generate</span></div></pre></td></tr></table></figure>
<h3 id="3-写文章"><a href="#3-写文章" class="headerlink" title="3. 写文章"></a>3. 写文章</h3><p>使用<code>hexo new</code>命令生成文章或者直接在<code>_posts</code>目录下直接创建文件，打开后先编辑文章头部信息，如下所示是本文的头部信息，以<code>---</code>结尾。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">title: 使用Hexo搭建个人博客</div><div class="line">layout: post</div><div class="line">date: 2014-03-03 19:07:43</div><div class="line">comments: <span class="literal">true</span></div><div class="line">categories: B<span class="built_in">log</span></div><div class="line">tags: [Hexo]</div><div class="line">keywords: Hexo, B<span class="built_in">log</span></div><div class="line">description: 生命在于折腾，又把博客折腾到Hexo了。给Hexo点赞。</div><div class="line">---</div></pre></td></tr></table></figure>
<p>接下来使用<code>Markdown</code>编辑文章就可以了</p>
<h2 id="发布博客"><a href="#发布博客" class="headerlink" title="发布博客"></a>发布博客</h2><p>由于生成的都是静态页面，可以发布在<code>github</code>上。这里的发布也是十分简单的，首先在自己的<code>github</code>上创建一个<code>repository</code>，接着修改<code>_config.yml</code>中的<code>repository</code>字段为<code>repository</code>的<code>git</code>地址（建议不要选<code>https</code>的那个地址),<code>type</code>字段填<code>git</code>,在<code>github</code>上添加了你本机的<code>ssh key</code>,最后执行<code>hexo d</code>，如果没报什么错的话，现在通过<code>yourname.github.io</code>已经可以访问你的博客了。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line"> <span class="built_in">type</span>: git</div><div class="line"> repository: git@github.com:yourname/yourname.github.io.git</div></pre></td></tr></table></figure>
<p>如果你有自己的域名的话，只要在<code>source</code>目录下创建<code>CNAME</code>文件，在其中写入你的域名，然后在域名管理添加你的域名解析就可以了。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> <span class="built_in">source</span></div><div class="line">$ <span class="built_in">echo</span> c4fun.cn &gt; CNAME</div></pre></td></tr></table></figure>
<p>到这里，一个基于<code>Hexo</code>的博客基本就完成了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天无意中看到了Hexo这个基于Node.js博客框架，自称轻巧快速，于是动起了折腾的想法。尝试后感觉Hexo确实很不错，生成静态页面的速度快，而且搭建环境也容易,很赞。这里简单介绍一下Hexo的安装和使用方法，详细的文档包括API都可以在网上找到，有需要的可以自行百度。&lt;
    
    </summary>
    
      <category term="Hexo" scheme="http://blog.dickdum.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://blog.dickdum.com/tags/Hexo/"/>
    
      <category term="Blog" scheme="http://blog.dickdum.com/tags/Blog/"/>
    
  </entry>
  
</feed>
